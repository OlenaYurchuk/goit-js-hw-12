import{S as y,a as p,i as h}from"./assets/vendor-da186403.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const u of t.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&i(u)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const L="42222554-b2624bd1f455ca6190f2bf509",d=document.querySelector(".gallery");function v(r){const a=r.map(s=>`<li class="gallery-item">
             <div class="card-top">
            <a class="card-link" href="${s.largeImageURL}">
                <img class="card-image" src="${s.webformatURL}" alt="${s.tags}">
            </a>
        </div>
        <div class="card-bottom">
            <p class="card-likes">Likes <span class="card-value">${s.likes}</span></p>
            <p class="card-views">Views <span class="card-value">${s.views}</span></p>
            <p class="card-comments">Comments <span class="card-value">${s.comments}</span></p>
            <p class="card-downloads">Downloads <span class="card-value">${s.downloads}</span></p>
        </div>
        </li>`).join("");return d.insertAdjacentHTML("beforeend",a),a}const f=document.querySelector(".search-form"),b=document.querySelector(".search-field"),n=document.querySelector(".more-photos"),o=document.querySelector(".loader");let c="",w=new y(".gallery a",{}),l=1,m=15;p.defaults.baseURL="https://pixabay.com/api/";f.addEventListener("submit",S);function S(r){if(r.preventDefault(),d.innerHTML="",c=b.value.trim(),c===""){q();return}g(c,l),f.reset()}n.addEventListener("click",E);async function E(){l+=1,await g(c,l);const r=d.firstElementChild.getBoundingClientRect().height;P(r*2)}async function g(r,a){const s=new URLSearchParams({key:L,q:r,image_type:"photo",orientation:"horizontal",safesearch:"true",page:l,per_page:m});try{o.classList.remove("hidden");const e=(await p.get(`?${s}`)).data;if(e.hits.length===0)return o.classList.add("hidden"),n.classList.add("hidden"),h.error({position:"topRight",message:"Sorry, there are no images matching <br/> your search query. Please try again!"});if(v(e.hits),w.refresh(),o.classList.add("hidden"),(a-1)*m+e.hits.length<e.totalHits)o.classList.remove("hidden"),n.classList.remove("hidden"),o.classList.add("hidden");else return n.classList.add("hidden"),h.error({position:"topRight",message:"We are sorry, but you have reached </br> the end of search results"})}catch(i){console.error("Error fetching images:",i)}finally{o.classList.add("hidden")}}function P(r){window.scrollBy({top:r,left:0,behavior:"smooth"})}function q(){d.innerHTML="",n.classList.add("hidden")}
//# sourceMappingURL=commonHelpers.js.map
